{"uid":"f41f8f3868551db9","name":"test_order_getall[result0]","fullName":"testcases.test_order#test_order_getall","historyId":"6a88d5ad1d7de6f85f78d77a9eb85c7f","time":{"start":1706176012732,"stop":1706176012773,"duration":41},"status":"broken","statusMessage":"KeyError: 'message'","statusTrace":"result = ('003', 'succ_order_getAll', 'order', '192.168.0.105:3000', '/api/order', 'get', ...)\ngetToken = <RequestsCookieJar[Cookie(version=0, name='koa.sid', value='zqgaf00BDG_SABxwNfDQ7QhQ1gbyiICk', port=None, port_specifi...ure=False, expires=1706262412, discard=False, comment=None, comment_url=None, rest={'httponly': None}, rfc2109=False)]>\n\n    @pytest.mark.parametrize(\"result\", data_order_getall())\n    def test_order_getall(result,getToken):\n        cookie= getToken\n        id = result[0]\n        name = result[1]\n        module = result[2]\n        request_prefix = result[3]\n        request_url = result[4]\n        request_type = result[5]\n        need_login = result[6]\n        data = result[7]\n        expect_result = result[8]\n        real_result = result[9]\n        test_result = result[10]\n        data_type = result[11]\n        url = 'http://' + request_prefix + request_url\n        dataDict = json.loads(data)\n        expect_resultDict = json.loads(expect_result)\n        res = Request.send_request(url, method=request_type, json=dataDict, cookies=cookie).json()\n        assert  expect_resultDict[\"errno\"]==res[\"errno\"]\n>       assert  expect_resultDict[\"message\"] ==  res[\"message\"]\nE       KeyError: 'message'\n\ntestcases\\test_order.py:77: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"getToken","time":{"start":1706176012453,"stop":1706176012460,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"afterStages":[{"name":"getToken::0","time":{"start":1706176012885,"stop":1706176012885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_order"},{"name":"host","value":"DESKTOP-061EAN7"},{"name":"thread","value":"10508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"result","value":"('003', 'succ_order_getAll', 'order', '192.168.0.105:3000', '/api/order', 'get', '1', 'null', '{\"errno\":0,\"data\":[]}', '{\"errno\":0,\"data\":[]}', 'pass', 'ignore')"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"f41f8f3868551db9.json","parameterValues":["('003', 'succ_order_getAll', 'order', '192.168.0.105:3000', '/api/order', 'get', '1', 'null', '{\"errno\":0,\"data\":[]}', '{\"errno\":0,\"data\":[]}', 'pass', 'ignore')"]}